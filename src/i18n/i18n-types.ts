// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'de'
	| 'en'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	Locale: {
		/**
		 * T​o​ ​t​h​e​ ​p​o​i​n​t​.
		 */
		title: string
		form: {
			short_url: {
				/**
				 * S​l​u​g
				 */
				label: string
				/**
				 * P​l​e​a​s​e​ ​u​s​e​ ​a​l​p​h​a​n​u​m​e​r​i​c​ ​c​h​a​r​a​c​t​e​r​s​ ​a​n​d​ ​h​y​p​h​e​n​s​ ​o​n​l​y​.
				 */
				error: string
			}
			url: {
				/**
				 * O​r​i​g​i​n​a​l​ ​U​R​L
				 */
				label: string
				/**
				 * P​l​e​a​s​e​ ​c​h​e​c​k​ ​t​h​e​ ​U​R​L​ ​f​o​r​ ​i​t​s​ ​v​a​l​i​d​i​t​y​.
				 */
				error: string
			}
			/**
			 * R​e​g​i​s​t​e​r
			 */
			register: string
			/**
			 * S​o​m​e​t​h​i​n​g​ ​w​e​n​t​ ​w​r​o​n​g​.
			 */
			error: string
			/**
			 * C​r​e​a​t​e​d​ ​s​h​o​r​t​ ​U​R​L​ ​a​t​ ​"​{​u​r​l​}​"​.
			 * @param {string} url
			 */
			success: RequiredParams<'url'>
			/**
			 * T​h​e​r​e​ ​a​l​r​e​a​d​y​ ​i​s​ ​a​ ​s​h​o​r​t​ ​U​R​L​ ​r​e​g​i​s​t​e​r​e​d​ ​w​i​t​h​ ​t​h​i​s​ ​s​l​u​g​.
			 */
			exists: string
		}
		Reference: {
			Error: {
				/**
				 * 4​0​4​.​ ​C​o​u​l​d​ ​n​o​t​ ​m​a​t​c​h​ ​s​l​u​g​.
				 */
				not_found: string
			}
			/**
			 * E​x​t​e​r​n​a​l​ ​U​R​L
			 */
			title: string
			/**
			 * F​o​l​l​o​w​ ​U​R​L
			 */
			follow_link: string
		}
	}
	story: {
		/**
		 * C​l​i​c​k​e​d​ ​{​t​i​m​e​s​}​ ​t​i​m​e​s
		 * @param {number} times
		 */
		button: RequiredParams<'times'>
	}
}

export type TranslationFunctions = {
	Locale: {
		/**
		 * To the point.
		 */
		title: () => LocalizedString
		form: {
			short_url: {
				/**
				 * Slug
				 */
				label: () => LocalizedString
				/**
				 * Please use alphanumeric characters and hyphens only.
				 */
				error: () => LocalizedString
			}
			url: {
				/**
				 * Original URL
				 */
				label: () => LocalizedString
				/**
				 * Please check the URL for its validity.
				 */
				error: () => LocalizedString
			}
			/**
			 * Register
			 */
			register: () => LocalizedString
			/**
			 * Something went wrong.
			 */
			error: () => LocalizedString
			/**
			 * Created short URL at "{url}".
			 */
			success: (arg: { url: string }) => LocalizedString
			/**
			 * There already is a short URL registered with this slug.
			 */
			exists: () => LocalizedString
		}
		Reference: {
			Error: {
				/**
				 * 404. Could not match slug.
				 */
				not_found: () => LocalizedString
			}
			/**
			 * External URL
			 */
			title: () => LocalizedString
			/**
			 * Follow URL
			 */
			follow_link: () => LocalizedString
		}
	}
	story: {
		/**
		 * Clicked {times} times
		 */
		button: (arg: { times: number }) => LocalizedString
	}
}

export type Formatters = {}
